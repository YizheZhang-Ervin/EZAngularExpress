{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/api/api.component.ts","webpack:///src/app/api/api.component.html","webpack:///src/app/api/api.service.ts","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","description","ApiComponent","apiService","showData","getData","subscribe","data","error","filter","h","deleteData","editData","updateData","datas","ix","findIndex","undefined","selector","templateUrl","styleUrls","providers","httpOptions","headers","ApiService","http","ApiUrl","get","pipe","handleError","post","url","set","put","ErrorEvent","console","message","status","providedIn","routes","AppRoutingModule","forRoot","imports","AppComponent","toggleData","AppModule","withOptions","cookieName","headerName","declarations","bootstrap","environment","production","bootstrapModule","err"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component, OnInit } from '@angular/core';\nimport {Data,ApiService} from './api.service'\n\n@Component({\n  selector: 'app-api',\n  templateUrl: './api.component.html',\n  styleUrls: ['./api.component.scss'],\n  providers:[ApiService]\n})\nexport class ApiComponent implements OnInit {\n  data:Data[];\n  error:any;\n  editData: Data;\n\n  constructor(private apiService:ApiService) { }\n\n  ngOnInit(): void {\n    this.showData();\n  }\n\n  // get\n  showData():void {\n    this.apiService.getData()\n      .subscribe(\n        data => (this.data = data), // success path\n        error => this.error = error // error path\n      );\n  }\n\n  // post\n  // createnew(name: string): void {\n  //   this.editData = undefined;\n  //   name = name.trim();\n  //   if (!name) {\n  //     return;\n  //   }\n  //   const newData: Data = { name } as Data;\n  //   this.apiService\n  //     .addData(newData)\n  //     .subscribe(data => this.data.push(data));\n  // }\n\n  // delete\n  delete(data:Data): void {\n    this.data = this.data.filter(h => h !== data);\n    this.apiService\n      .deleteData(data.id)\n      .subscribe();\n  }\n\n  // enter update status\n  edit(data: Data) {\n    this.editData = data;\n  }\n\n  // put\n  update() {\n    if (this.editData) {\n      this.apiService\n        .updateData(this.editData)\n        .subscribe(datas => {\n        const ix = datas ? this.data.findIndex(h => h.id === datas.id) : -1;\n        if (ix > -1) {\n          this.data[ix] = datas;\n        }\n      });\n      this.editData = undefined;\n    }\n  }\n\n}\n","<p>Api Component</p>\n<input #dataName />\n\n<button (click)=\"showData()\">get</button>\n<!-- <button (click)=\"createnew(dataName.value); dataName.value=''\">add</button> -->\n\n<div *ngIf=\"data\">\n    <li *ngFor=\"let dt of data\">\n      <a (click)=\"edit(dt)\">\n        <span *ngIf=\"dt!==editData\">{{dt.title}}</span>\n        <input *ngIf=\"dt===editData\" [(ngModel)]=\"dt.title\" (blur)=\"update()\" (keyup.enter)=\"update()\">\n      </a>\n      <p>id \"{{dt.id}}\"</p>\n      <p>description is \"{{dt.description}}\"</p>\n      <p>create \"{{dt.createDate}}\"</p>\n      <p>update \"{{dt.updateDate}}\"</p>\n      <button title=\"delete data\"(click)=\"delete(dt)\">x</button>\n    </li>\n</div>\n","import { Injectable } from '@angular/core';\nimport { HttpClient,HttpHeaders,HttpErrorResponse } from '@angular/common/http';\nimport { Observable, throwError } from 'rxjs';\nimport { catchError, retry } from 'rxjs/operators';\n\nconst httpOptions = {\n  headers: new HttpHeaders({\n    'Content-Type':  'application/json',\n    'Authorization': 'my-auth-token'\n  })\n};\n\nexport interface Data{\n  id:number;\n  title:string;\n  description:string;\n  createDate:string;\n  updateDate:string;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ApiService {\n  ApiUrl = 'api/test';\n  \n  constructor(private http: HttpClient){}\n\n  /* GET: get all data from DB */ \n  getData(): Observable<Data[]>  {\n    return this.http.get<Data[]>(this.ApiUrl)\n      .pipe(\n        retry(3),\n        catchError(this.handleError)\n      );\n  }\n\n  /* POST: add new one to DB */\n  addData(data: Data): Observable<Data> {\n    return this.http.post<Data>(this.ApiUrl, data, httpOptions)\n      .pipe(\n        catchError(this.handleError)\n      );\n  }\n\n  /* DELETE: delete one from DB */\n  deleteData (id: number): Observable<{}> {\n    const url = `${this.ApiUrl}/${id}`;\n    return this.http.delete(url, httpOptions)\n      .pipe(\n        catchError(this.handleError)\n      );\n  }\n\n  /* PUT: update one from DB */\n  updateData (data: Data): Observable<Data> {\n    httpOptions.headers =\n      httpOptions.headers.set('Authorization', 'my-new-auth-token');\n\n    return this.http.put<Data>(this.ApiUrl, data, httpOptions)\n      .pipe(\n        catchError(this.handleError)\n      );\n  }\n\n  // handle error\n  private handleError(error: HttpErrorResponse) {\n    if (error.error instanceof ErrorEvent) {\n      console.error('An error occurred:', error.error.message);\n    } else {\n      console.error(\n        `Backend returned code ${error.status}, ` +\n        `body was: ${error.error}`);\n    }\n    return throwError(\n      'Something bad happened; please try again later.');\n  };\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  showData = true;\n\n  toggleData(){this.showData=!this.showData;}\n\n}\n","<h1>App Component</h1>\n<div>\n  <input type=\"checkbox\" [checked]=\"showData\" (click)=\"toggleData()\">\n  <label for=\"heroes\">Heroes</label>\n\n</div>\n\n<app-api *ngIf=\"showData\"></app-api>\n\n\n<router-outlet></router-outlet>\n\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule }      from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\nimport { HttpClientXsrfModule } from '@angular/common/http';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { ApiComponent } from './api/api.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    ApiComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule,\n    HttpClientModule,\n    HttpClientXsrfModule.withOptions({\n      cookieName: 'My-Xsrf-Cookie',\n      headerName: 'My-Xsrf-Header',\n    }),\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}